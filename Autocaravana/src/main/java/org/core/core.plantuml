@startuml

title __CORE's Class Diagram__\n

  namespace org.core {
    class org.core.Autocaravana {
        {static} + servidor : ServicioAutocaravana
        - estado : String
        - idA : int
        - kilometraje : int
        {static} - listaAutocaravanas : List<Autocaravana>
        - matricula : String
        - modelo : String
        - plazas : int
        - precioPorDia : float
        - vecesReservada : int
        + Autocaravana()
        + Autocaravana()
        {static} + buscarAutocaravana()
        + eliminarAutocaravana()
        {static} + getCantidadCaravanas()
        + getEstado()
        + getIdA()
        + getKilometraje()
        + getMatricula()
        + getModelo()
        + getPlazas()
        + getPrecioPorDia()
        + getVecesReservada()
        + quedanCaravanas()
        + setEstado()
        + setKilometraje()
        + setModelo()
        + setPrecioPorDia()
        + toString()
        {static} ~ getListaAutocaravanas()
        ~ setNuevaReservaRealizada()
    }
  }
  

  namespace org.core {
    class org.core.AutocaravanaTest {
        + crearAutocaravanaConKilometrajeNegativoLanzaExcepcion()
        + crearAutocaravanaConMatriculaIncorrectaLanzaExcepcion()
        + crearAutocaravanaConMatriculaYaExistenteLanzaExcepcion()
        + crearAutocaravanaConPlazasNegativasLanzaExcepcion()
        + crearAutocaravanaConPrecioNegativoLanzaExcepcion()
        + setUp()
        + testAnadirQuitarCaravanaReservada()
        + testBuscarAutocaravana()
        + testConstructor()
        + testGetEstado()
        + testGetIdA()
        + testGetKilometraje()
        + testGetListaAutocaravanas()
        + testGetMatricula()
        + testGetModelo()
        + testGetPlazas()
        + testGetPrecioPorDia()
        + testModificarKilometraje()
        + testModificarKilometrajeCero()
        + testModificarKilometrajeMenos()
        + testModificarKilometrajeNegativo()
        + testModificarPrecio()
        + testModificarPrecioCero()
        + testModificarPrecioNegativo()
        ~ testConstructorCampo()
    }
  }
  

  namespace org.core {
    class org.core.Cliente {
        - apellido : String
        - dni : String
        - email : String
        - fechaNacimiento : LocalDate
        - idC : int
        {static} - listaClientes : List<Cliente>
        - multas : int
        - nombre : String
        - reservasRealizadas : int
        {static} - servidor : ServicioCliente
        - telefono : String
        + Cliente()
        + Cliente()
        {static} + buscarCliente()
        {static} + buscarCliente()
        + eliminarCliente()
        + getApellido()
        + getCantidadReservasRealizadas()
        + getDni()
        + getEdad()
        + getEmail()
        + getFechaNacimiento()
        + getIdC()
        + getMultas()
        + getNombre()
        {static} + getNumeroClientes()
        + getTelefono()
        + setApellido()
        + setDni()
        + setEmail()
        + setFechaNacimiento()
        + setNombre()
        + setNuevaMulta()
        + setNuevaReservaRealizada()
        + setTelefono()
        + toString()
        {static} ~ getListaClientes()
    }
  }
  

  namespace org.core {
    class org.core.ClienteTest {
        + setUp()
        + testApellidoVacio()
        + testBuscarCliente()
        + testBuscarCliente2()
        + testDniExistente()
        + testDniVacio()
        + testEliminarCliente()
        + testEmailSincaracteres()
        + testEmailVacio()
        + testFechaIncorrecta()
        + testGetApellido()
        + testGetDni()
        + testGetEdad()
        + testGetEmail()
        + testGetId()
        + testGetListaCliente()
        + testGetNombre()
        + testGetNumeroMultas()
        + testGetReservasRealizas()
        + testGetTelefono()
        + testModificarCliente()
        + testNombreVacio()
        + testTelefonoExistente()
        + testTelefonoIncorrecto()
        + testTelefonoVacio()
        + testgetNumeroClientes()
        ~ testClienteCadena()
        ~ testConstructorCliente()
    }
  }
  

  namespace org.core {
    class org.core.Main {
        {static} + main()
    }
  }
  

  namespace org.core {
    interface org.core.ReglasAutocaravana {
        {static} + comprobarMatricula()
    }
  }
  

  namespace org.core {
    interface org.core.ReglasCliente {
        + comprobarCliente()
        {static} + comprobarDNI()
        {static} + comprobarEdad()
    }
  }
  

  namespace org.core {
    interface org.core.ReglasReserva {
        {static} + listaEstadosReserva : List<String>
        {static} + addEstadoReserva()
        {static} + borrarEstado()
        + calculaPrecioTotal()
        {static} + calcularMulta()
        + calcularTasaCancelacion()
        {static} + calcularTasaFinalizacion()
        + calcularTasaModificacion()
        {static} + comprobarAutocaravana()
        + comprobarCambioEstado()
        {static} + comprobarCliente()
        {static} + comprobarEstadoReserva()
        + comprobarReserva()
        + condicionesCancelacion()
        {static} + condicionesFinalizacion()
        + condicionesModificacion()
        {static} + eliminarEstadoReserva()
    }
  }
  

  namespace org.core {
    interface org.core.RepositorioAutocaravana {
        {static} + cargarAutocaravana()
        {static} + cargarEstadosAutocaravana()
        {static} + guardarAutocaravana()
        {static} + guardarEstadoAutocaravana()
    }
  }
  

  namespace org.core {
    interface org.core.RepositorioCliente {
        {static} + cargarClientes()
        {static} + cargarEstadosCliente()
        {static} + guardarCliente()
        {abstract} + guardarEstadosCliente()
    }
  }
  

  namespace org.core {
    interface org.core.RepositorioReserva {
        {static} + cargarEstadosReserva()
        {static} + cargarReservas()
        {abstract} + guardarEstadosReserva()
        {abstract} + guardarReservas()
    }
  }
  

  namespace org.core {
    class org.core.Reserva {
        {static} - cantidadReservas : int
        - estadoReserva : String
        - fechaFin : LocalDate
        - fechaIni : LocalDate
        - idR : int
        {static} - listaReservas : List<Reserva>
        - precioTotal : float
        {static} - servidor : ServicioReserva
        + Reserva()
        + Reserva()
        {static} + buscarReserva()
        {static} + buscarReserva()
        + checkIn()
        + checkOut()
        + eliminarReserva()
        + getAutocaravana()
        + getCantidadReservas()
        + getCliente()
        + getEstadoReserva()
        + getFechaFin()
        + getFechaIni()
        + getIdR()
        + getPrecioTotal()
        + setEstadoReserva()
        + toString()
        {static} ~ getListaReservas()
        ~ setPrecioTotal()
    }
  }
  

  namespace org.core {
    class org.core.ReservaTest {
        + setUp()
        + testCaravanaReserva()
        + testCheckIn()
        + testCheckOut()
        + testClienteReserva()
        + testConstructorReserva()
        + testFechaCoincidentes()
        + testFechaErroneaExcepcion()
        + testGetAutocaravana()
        + testGetCantidadReservas()
        + testGetCliente()
        + testGetEstadoReserva()
        + testGetFechaFin()
        + testGetFechaIni()
        + testGetIdr()
        + testGetListaReservas()
        + testGetPrecioTotal()
        + testReservaCadena()
    }
  }
  

  namespace org.core {
    class org.core.ServicioAutocaravana {
        {static} - AUTOCARAVANAS_FILE : String
        {static} - ESTADOSAUTOCARAVANA_FILE : String
        {static} - listaEstadosAutocaravana : List<String>
        + ServicioAutocaravana()
        {static} + cargarAutocaravana()
        {static} + cargarEstadosAutocaravana()
        {static} + comprobarEstadoAutocaravana()
        + guardarAutocaravana()
        + guardarEstadoAutocaravana()
        {static} ~ getListaEstadoAutocaravana()
    }
  }
  

  namespace org.core {
    class org.core.ServicioCliente {
        {static} - CLIENTES_FILE : String
        {static} - ESTADOSCLIENTE_FILE : String
        {static} - listaEstadosCliente : List<String>
        {static} + cargarClientes()
        {static} + cargarEstadosCliente()
        {static} + getListaEstadoClientes()
        {static} + guardarCliente()
        + guardarEstadosCliente()
    }
  }
  

  namespace org.core {
    class org.core.ServicioReserva {
        {static} - ESTADOSRESERVAS_FILE : String
        {static} - RESERVAS_FILE : String
        {static} - listaEstadoReserva : List<String>
        {static} + cargarEstadosReserva()
        {static} + cargarReservas()
        {static} + checkIn()
        {static} + checkOut()
        {static} + comprobarEstadoReserva()
        {static} + eliminarEstadoReserva()
        {static} + getListaEstadoReservas()
        + guardarEstadosReserva()
        + guardarReservas()
        {static} + nuevoestado()
    }
  }
  

  org.core.Reserva o-- org.core.Autocaravana : caravana
  org.core.Reserva o-- org.core.Cliente : cliente
  org.core.ServicioAutocaravana .up.|> org.core.ReglasAutocaravana
  org.core.ServicioAutocaravana .up.|> org.core.RepositorioAutocaravana
  org.core.ServicioCliente .up.|> org.core.ReglasCliente
  org.core.ServicioCliente .up.|> org.core.RepositorioCliente
  org.core.ServicioReserva .up.|> org.core.ReglasReserva
  org.core.ServicioReserva .up.|> org.core.RepositorioReserva


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
